# É AQUI QUE IREMOS GERENCIAR A FUNÇÃO DE LOGIN E LOGOUT DO USUÁRIO
# E TBM COMO REUTILIZAR ESSE MÓDULO EM OUTROS CONTROLADORES

module SessionHelper
    # ACESSAREMOS O A VARIÁVEL SESSION E O RAILS DISPONIBILIZARÁ A SESSÃO NO BROWSER, EQTO O BROWSER  ESTIVER ABERTO TEREMOS A SESSÃO ABERTA
    # ACESSAMOS PASSANDO COMO DA MESMA FORMA QUE UM HASH, O SYMBOL :USER_ID
    # E O VALOR, ESTAMOS SETANDO O USUARIO LOGADO USER.ID
    def sign_in(user)
        session[:user_id] = user.id
    end

    # VOU AO OBJETO SESSION, E EXECUTO O METODO DELETE PARA DELETAR A CHAVE :USER_ID
    def sign_out
        session.delete (:user_id)
    end

    # MÉTODO CURRENT USER. SETEI UMA VARIÁVEL GLOBAL @CURRENT_USER, VOU USAR O OBJETO USER E CHAMAR O MÉTODO FIND_BY PARA LOCALIZAR O USUÁRIO PELO ID, E O ID JÁ ESTÁ NA SESSION
    # SE A VARIÁVEL CURRENT_USER FOR SETADA, ELE NÃO VAI EXECUTAR A QUERY NO BANCO, VAI FAZER UMA CASH DA VAR. 
    # MAS SE FOR NEW, ELE EXECUTARÁ TODA A QUERY DEPOIS DO = User.find_by(:id.....))
    def current_user
       @current_user ||= User.find_by(id: session[:user_id])    
    end

    # METODO QUE FARÁ UMA CHECAGEM NO METODO ACIMA, CURRENT_USER. SE O OBJETO RETORNADO É NIL OU NÃO ...
    # SE FOR NIL FARÁ  BLOQUEIOS A USUÁRIOS NÃO LOGADOS
    def user_signed_in?
        !current_user.nil?        
    end
end
